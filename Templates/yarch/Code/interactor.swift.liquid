//
//  {{ module_info.name }}.swift
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ date.year }} Putkov Dimi. All rights reserved.
//

protocol {{ module_info.name }}Interactor {
	func doSomething(request: {{ module_info.name }}.Something.Request)
}

/// business logic owner {{ module_info.name }}
final class {{ module_info.name }}InteractorImpl: {{ module_info.name }}Interactor {
	private let presenter: {{ module_info.name }}Presenter
	private let provider: {{ module_info.name }}Provider

	init(presenter: {{ module_info.name }}Presenter, provider: {{ module_info.name }}Provider = {{ module_info.name }}ProviderImpl()) {
		self.presenter = presenter
		self.provider = provider
	}
	
	// MARK: Do something
	func doSomething(request: {{ module_info.name }}.Something.Request) {
		provider.getItems { [weak self] (items, error) in
			let result: {{ module_info.name }}.{{ module_info.name }}RequestResult
			if let items = items {
				result = .success(items)
			} else if let error = error {
				result = .failure(.someError(message: error.localizedDescription))
			} else {
				result = .failure(.someError(message: "No Data"))
			}
			self?.presenter.presentSomething(response: {{ module_info.name }}.Something.Response(result: result))
		}
	}
}
